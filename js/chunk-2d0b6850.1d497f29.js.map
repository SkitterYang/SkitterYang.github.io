{"version":3,"sources":["webpack:///./src/markdowns/2020/20200107_howto_pack_python_by_miniconda.md?6ef5","webpack:///./src/markdowns/2020/20200107_howto_pack_python_by_miniconda.md"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","script","component"],"mappings":"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","file":"js/chunk-2d0b6850.1d497f29.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"本文介绍如何使用 docker + conda 在个人电脑上打包可在集群上运行的自定义 python 环境.\")]),_c('p',[_vm._v(\"以下均以 mac 为例, 在 windows 上的操作可能略有不同.\")]),_c('h2',[_c('strong',[_vm._v(\"安装docker\")])]),_c('p',[_vm._v(\"下载并安装 docker. https://docs.docker.com/docker-for-mac/install/\")]),_c('h2',[_c('strong',[_vm._v(\"安装 miniconda 镜像并创建容器\")])]),_c('p',[_vm._v(\"在终端内运行:\")]),_c('blockquote',[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\"}},[_vm._v(\"docker pull continuumio/miniconda3\\n\")])])]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\"}},[_vm._v(\"镜像下载完毕后, 执行\\n\")])]),_c('blockquote',[_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\"}},[_vm._v(\"docker run -v /tmp:/mnt --name example -i -t continuumio/miniconda3 /bin/bash\\n\")])])]),_c('p',[_vm._v(\"这样就创建了一个名为 example 的容器. 并将本地的 /tmp 目录挂载在容器内的 /mnt 目录上.\")]),_c('h4',[_vm._v(\"退出容器:\")]),_c('blockquote',[_c('p',[_vm._v(\"ctrl+d\")])]),_c('h4',[_vm._v(\"进入容器:\")]),_c('p',[_vm._v(\"终端内运行\")]),_c('blockquote',[_c('p',[_vm._v(\"docker start example && docker exec -it example /bin/bash\")])]),_c('p',[_c('strong',[_vm._v(\"配置 conda (可选)\")])]),_c('p',[_vm._v(\"conda 的源在国外, 速度比较慢. 可以使用清华提供的镜像, 加速包的安装.\")]),_c('p',[_vm._v(\"conda + conda-forge 即可覆盖大多数常用的 python 包.\")]),_c('p',[_vm._v(\"在容器内执行:\")]),_c('blockquote',[_c('p',[_vm._v(\"conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/\")]),_c('p',[_vm._v(\"conda config --set show_channel_urls yes\")])]),_c('h2',[_c('strong',[_vm._v(\"安装 conda-pack\")])]),_c('p',[_vm._v(\"conda-pack 是用来辅助打包的一个工具, 在容器内执行:\")]),_c('blockquote',[_c('p',[_vm._v(\"conda install -c conda-forge conda-pack\")])]),_c('h2',[_c('strong',[_vm._v(\"创建新的 conda 环境\")])]),_c('p',[_vm._v(\"在容器内执行:\")]),_c('blockquote',[_c('p',[_vm._v(\"conda create --name {环境名}\")]),_c('p',[_vm._v(\"source activate {环境名}\")])]),_c('p',[_vm._v(\"可以在创建环境时指定 python 版本, 如\")]),_c('blockquote',[_c('p',[_vm._v(\"conda create --name py37 python=3.7\")])]),_c('p',[_vm._v(\"更详细的用法请参考 conda 的官网: https://docs.conda.io/projects/conda/en/latest/user-guide/\")]),_c('h2',[_c('strong',[_vm._v(\"安装需要的 python 包\")])]),_c('p',[_vm._v(\"在容器内执行:\")]),_c('blockquote',[_c('p',[_vm._v(\"conda install {包名}\")])]),_c('p',[_vm._v(\"或\")]),_c('blockquote',[_c('p',[_vm._v(\"pip install {包名}\")])]),_c('p',[_vm._v(\"根据提示进行安装\")]),_c('p',[_vm._v(\"注:\")]),_c('p',[_vm._v(\"尽量使用 conda 安装, 如果 conda 的主仓库里找不到, 尝试在 conda 的其他源(conda-forge, msys2, menpo) 中进行查找.\")]),_c('p',[_vm._v(\"这个镜像没有包含编译工具, 用 pip 安装一些非二进制发行的包会报错. 如果 pip 安装时报错, 可以尝试使用如下命令安装编译工具:\")]),_c('blockquote',[_c('p',[_vm._v(\"apt-get update --fix-missing && apt-get install build-essential\")])]),_c('h2',[_c('strong',[_vm._v(\"打包 python 环境\")])]),_c('p',[_vm._v(\"在容器内执行:\")]),_c('blockquote',[_c('p',[_vm._v(\"conda pack -n {环境名} -o /mnt/{环境名}.tar.gz\")])]),_c('p',[_vm._v(\"我们将打包好的环境输出到 /mnt 下, 对应创建容器时挂载的宿主机 /tmp 目录\")]),_c('p',[_vm._v(\"运行完毕后, 在宿主机的 /tmp 文件夹下, 会出现一个 {环境名}.tar.gz, 这就是打包好的 python 环境\")]),_c('h2',[_c('strong',[_vm._v(\"使用 python 环境\")])]),_c('p',[_vm._v(\"首先需要将打包好的 python 环境(那个 tar.gz) 上传到 hdfs 上\")]),_c('p',[_vm._v(\"在 hadoop streaming 作业中使用\")]),_c('blockquote',[_c('p',[_vm._v(\"hadoop streaming \\\\\")]),_c('p',[_vm._v(\"-archives \\\"/user/fsg_rcc_fdw_datamininga_rd/tools/python37.tar.gz#env\\\" \\\\\")]),_c('p',[_vm._v(\"-files \\\"app\\\" \\\\\")]),_c('p',[_vm._v(\"-output \\\"/user/fsg_rcc_fdw_datamininga_rd/input\\\" \\\\\")]),_c('p',[_vm._v(\"-input \\\"/user/fsg_rcc_fdw_datamininga_rd/output\\\" \\\\\")]),_c('p',[_vm._v(\"-mapper \\\"env/bin/python app/mapper.py\\\" \\\\\")]),_c('p',[_vm._v(\"-reducer \\\"env/bin/python app/reducer.py\\\"\")])])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./20200107_howto_pack_python_by_miniconda.md?vue&type=template&id=217f1ccc&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}