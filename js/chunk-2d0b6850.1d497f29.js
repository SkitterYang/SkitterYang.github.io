(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b6850"],{"1e06":function(n,o,p){"use strict";p.r(o);var t=function(){var n=this,o=n.$createElement;n._self._c;return n._m(0)},a=[function(){var n=this,o=n.$createElement,p=n._self._c||o;return p("section",[p("p",[n._v("本文介绍如何使用 docker + conda 在个人电脑上打包可在集群上运行的自定义 python 环境.")]),p("p",[n._v("以下均以 mac 为例, 在 windows 上的操作可能略有不同.")]),p("h2",[p("strong",[n._v("安装docker")])]),p("p",[n._v("下载并安装 docker. https://docs.docker.com/docker-for-mac/install/")]),p("h2",[p("strong",[n._v("安装 miniconda 镜像并创建容器")])]),p("p",[n._v("在终端内运行:")]),p("blockquote",[p("pre",{pre:!0},[p("code",{pre:!0,attrs:{"v-pre":""}},[n._v("docker pull continuumio/miniconda3\n")])])]),p("pre",{pre:!0},[p("code",{pre:!0,attrs:{"v-pre":""}},[n._v("镜像下载完毕后, 执行\n")])]),p("blockquote",[p("pre",{pre:!0},[p("code",{pre:!0,attrs:{"v-pre":""}},[n._v("docker run -v /tmp:/mnt --name example -i -t continuumio/miniconda3 /bin/bash\n")])])]),p("p",[n._v("这样就创建了一个名为 example 的容器. 并将本地的 /tmp 目录挂载在容器内的 /mnt 目录上.")]),p("h4",[n._v("退出容器:")]),p("blockquote",[p("p",[n._v("ctrl+d")])]),p("h4",[n._v("进入容器:")]),p("p",[n._v("终端内运行")]),p("blockquote",[p("p",[n._v("docker start example && docker exec -it example /bin/bash")])]),p("p",[p("strong",[n._v("配置 conda (可选)")])]),p("p",[n._v("conda 的源在国外, 速度比较慢. 可以使用清华提供的镜像, 加速包的安装.")]),p("p",[n._v("conda + conda-forge 即可覆盖大多数常用的 python 包.")]),p("p",[n._v("在容器内执行:")]),p("blockquote",[p("p",[n._v("conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/\nconda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/")]),p("p",[n._v("conda config --set show_channel_urls yes")])]),p("h2",[p("strong",[n._v("安装 conda-pack")])]),p("p",[n._v("conda-pack 是用来辅助打包的一个工具, 在容器内执行:")]),p("blockquote",[p("p",[n._v("conda install -c conda-forge conda-pack")])]),p("h2",[p("strong",[n._v("创建新的 conda 环境")])]),p("p",[n._v("在容器内执行:")]),p("blockquote",[p("p",[n._v("conda create --name {环境名}")]),p("p",[n._v("source activate {环境名}")])]),p("p",[n._v("可以在创建环境时指定 python 版本, 如")]),p("blockquote",[p("p",[n._v("conda create --name py37 python=3.7")])]),p("p",[n._v("更详细的用法请参考 conda 的官网: https://docs.conda.io/projects/conda/en/latest/user-guide/")]),p("h2",[p("strong",[n._v("安装需要的 python 包")])]),p("p",[n._v("在容器内执行:")]),p("blockquote",[p("p",[n._v("conda install {包名}")])]),p("p",[n._v("或")]),p("blockquote",[p("p",[n._v("pip install {包名}")])]),p("p",[n._v("根据提示进行安装")]),p("p",[n._v("注:")]),p("p",[n._v("尽量使用 conda 安装, 如果 conda 的主仓库里找不到, 尝试在 conda 的其他源(conda-forge, msys2, menpo) 中进行查找.")]),p("p",[n._v("这个镜像没有包含编译工具, 用 pip 安装一些非二进制发行的包会报错. 如果 pip 安装时报错, 可以尝试使用如下命令安装编译工具:")]),p("blockquote",[p("p",[n._v("apt-get update --fix-missing && apt-get install build-essential")])]),p("h2",[p("strong",[n._v("打包 python 环境")])]),p("p",[n._v("在容器内执行:")]),p("blockquote",[p("p",[n._v("conda pack -n {环境名} -o /mnt/{环境名}.tar.gz")])]),p("p",[n._v("我们将打包好的环境输出到 /mnt 下, 对应创建容器时挂载的宿主机 /tmp 目录")]),p("p",[n._v("运行完毕后, 在宿主机的 /tmp 文件夹下, 会出现一个 {环境名}.tar.gz, 这就是打包好的 python 环境")]),p("h2",[p("strong",[n._v("使用 python 环境")])]),p("p",[n._v("首先需要将打包好的 python 环境(那个 tar.gz) 上传到 hdfs 上")]),p("p",[n._v("在 hadoop streaming 作业中使用")]),p("blockquote",[p("p",[n._v("hadoop streaming \\")]),p("p",[n._v('-archives "/user/fsg_rcc_fdw_datamininga_rd/tools/python37.tar.gz#env" \\')]),p("p",[n._v('-files "app" \\')]),p("p",[n._v('-output "/user/fsg_rcc_fdw_datamininga_rd/input" \\')]),p("p",[n._v('-input "/user/fsg_rcc_fdw_datamininga_rd/output" \\')]),p("p",[n._v('-mapper "env/bin/python app/mapper.py" \\')]),p("p",[n._v('-reducer "env/bin/python app/reducer.py"')])])])}],e=p("2877"),c={},r=Object(e["a"])(c,t,a,!1,null,null,null);o["default"]=r.exports}}]);
//# sourceMappingURL=chunk-2d0b6850.1d497f29.js.map